# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    all_testcases.txt                                  :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: jgermany <nyaritakunai@outlook.com>        +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2023/02/13 16:09:54 by jgermany          #+#    #+#              #
#    Updated: 2023/02/13 22:15:32 by jgermany         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

FTPRINTF - ALL TESTCASES (ðŸŸ¢ðŸ”´)

ðŸ’« Evil tests made with passion ðŸ’«

CONTEXT
	Create ft_printf, a function that works the same as printf referenced in
	stdio.h.

	printf is a function that takes:
		- a format str (format) as its first argument
		- and a variable number of arguments of different types, from character 
		to hex

	Each arg beyond the format str is used in the format str following theses 
	rules:
		- a format specifier (ex: %c) in the format str at a position N will 
		be replaced by the argument of the same type at posiiton N in the 
		va_list. 
		- A mismatch or an absence of match between a type specifier in
		the format str and the positional arg will generate an error
		or a type conversion in some case (eg from integer to unsigned integer)
		- There are different types of format specifiers:
			- %c : character placeholder
			- %s : character string placeholder
			- %p : pointer (hexadecimal representation) placeholder
			- %d : signed integer placeholder
			- %i : signed integer (some say unsigned) placeholder
			- %u : unsigned integer placeholder
			- %x : hexadecimal placeholder
			- %X : hexadecimal placeholder
			- %% : prints %

	The function returns:
		- the processed format string on stdout (1)
		- the number of characters processed as an int 


TEST MATERIAL
	hon hon hon baguette non non non je prefere le vin

PROTOTYPE
	int	ft_printf(const char *format, ...);
